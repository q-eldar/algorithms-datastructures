* Qucik Sorting
** Partition
   The idea is, you take one arbitrary element from the array. Lets
   name it *pivot* element. Rearrance the array in such a way that all
   of the elements on left side less than, all of the elements on
   right side greater than pivot element. The implementation may
   remind you [[https://www.hackerrank.com/challenges/pairs/topics][two pointer technique]]. In this realization we will take
   first element as pivot element. 
   #+begin_src python :session :results output
def partition(arr, lo, hi):
    i, j = lo, hi
    while True:
        while arr[i] < arr[lo]:
            i += 1
            if i == hi: break
        while arr[lo] < arr[j]:
            j -= 1
            if j == lo: break
        if i >= j: break

        arr[i], arr[j] = arr[j], arr[i]
    arr[lo], arr[j] = arr[j], arr[lo]
    return j;

arr = [3, 8, 9, 2, 7, 4, 5, 0, 6]
print(partition(arr, 0, len(arr)))
print(arr)
   #+end_src

   #+RESULTS:
   #+begin_example
   Python 2.7.18 (default, Aug  4 2020, 11:16:42) 
   [GCC 9.3.0] on linux2
   Type "help", "copyright", "credits" or "license" for more information.
   Traceback (most recent call last):
     File "<stdin>", line 1, in <module>
     File "/tmp/babel-Vwnt6O/python-8A2zdD", line 17, in <module>
       print(partition(arr, 0, len(arr)))
     File "/tmp/babel-Vwnt6O/python-8A2zdD", line 7, in partition
       while arr[lo] < arr[j]:
   IndexError: list index out of range
   python.el: native completion setup loaded
   #+end_example
